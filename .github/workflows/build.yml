# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java Buid

on:
  push:
    branches: 
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven
        server-id: github-private 
        server-username: GITHUB_USER
        server-password: GITHUB_SECRET
    - run: cat /home/runner/.m2/settings.xml
#    - name: Settings.xml
#      uses: s4u/maven-settings-action@v3.0.0
#      with:
#        githubServer: false
#        servers: |
#           [{
#              "id": "github",
#              "username": "${{ github.actor }}",
#              "password": "${{ secrets.MAVEN_REPO_READ }}"
#           }]    
    - name: mvn build
      env: 
        GITHUB_USER: ${{ github.actor }}
        GITHUB-SECRET: ${{ secrets.MAVEN_REPO_READ }}
      run: mvn -X clean verify
    - name: Git Tag
      env: 
        GITHUB_USER: ${{ github.actor }}
        GITHUB-SECRET: ${{ secrets.MAVEN_REPO_READ }}
      run: |
        #get version in pom.xml
        version=$(mvn exec:exec -Dexec.executable=echo -Dexec.args='${project.version}' --quiet -N | sed 's/-SNAPSHOT//')
        date=$(date '+%Y%m%d')
        buildnr=${{github.run_number}}
        newversion="$version.$date$buildnr"
        echo "Tagging version  $newversion"
        remote=$(git remote)
        git tag "$newversion"
        git push "$remote" "$newversion"
        
